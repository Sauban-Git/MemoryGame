name: MemoryGame Test Build
on:
  push:
    branches:
      - test
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: permission
        run: chmod +x gradlew

      - name: Decoding keystore
        run: echo "${{ secrets.MYAPP_RELEASE_STORE_FILE }}" | base64 --decode > app/android_keystore.jks
        shell: bash

      - name: Extract version info
        id: extract_version_info
        run: |
          # Extract versionCode and versionName from build.gradle
          VERSION_CODE=$(grep "versionCode" app/build.gradle.kts | head -n 1 | sed -n 's/.*versionCode\s*=\s*\([0-9]*\).*/\1/p')
          VERSION_NAME=$(grep "versionName" app/build.gradle.kts | head -n 1 | sed -n 's/.*versionName\s*=\s*"\(.*\)".*/\1/p')

          # Set output values
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
        
      - name: Create keystore.properties file
        run: |
          echo "storeFile=android_keystore.jks" >> keystore.properties
          echo "storePassword=${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}" >> keystore.properties

        
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "Release"
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
            

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.API_KEY }}
      #   with:
      #     tag_name: v${{ env.VERSION_NAME }}
      #     release_name: MemoryGame ${{ env.VERSION_NAME }}
      #     body: |
      #       Release details:
      #         - Version Code: ${{ env.VERSION_CODE }}
      #         - Version Name: ${{ env.VERSION_NAME }}
      #     draft: false
      #     prerelease: false

      # - name: Upload APK to release
      #   uses: actions/upload-release-asset@v1
      #   env: 
      #     GITHUB_TOKEN: ${{ secrets.API_KEY }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: app/build/outputs/apk/release/app-release.apk
      #     asset_name: MemoryGame-${{ env.VERSION_NAME }}.apk
      #     asset_content_type: application/vnd.android.package-archive
